#!/bin/bash

echo ""
export PSM_DATA=./data

# Create configuration for Hades2
echo "homeDir=$(pwd)/hades2LF" > ${PSM_DATA}/test/cfg/hades2.properties
echo "debug=true" >> ${PSM_DATA}/test/cfg/hades2.properties
echo "Using Hades2 from $(grep homeDir ${PSM_DATA}/test/cfg/hades2.properties)"

# Access HELM Flow through the path
function get_system_folder_name {
    if [[ "$(uname)" == "Linux" ]];
    then
        echo "linux"
    fi
    if [[ "$(uname)" == CYGWIN* ]];
    then
        echo "windows"
    fi
}
if [[ -z "$(which helmflow)" ]]; 
then
	export PATH=${PATH}:$(pwd)/helmflow/$(get_system_folder_name)
	if [[ -z "$(which helmflow)" ]]; 
		echo "Missing HELM Flow binaries"
		exit
	fi
fi
echo "Using HELM Flow binary $(which helmflow)"

if [[ -z "${OPENMODELICAHOME}" ]];
then
	if [[ -z "$(which omc)" ]];
	then
		echo "Missing Open Modelica"
		exit
	fi
	export OPENMODELICAHOME="$(dirname $(which omc))"	
fi
echo "Using Open Modelica from ${OPENMODELICAHOME}"
echo ""

PSM_OPTIONS="-Ditesla.config.dir=${PSM_DATA}/test/cfg"
PSM_CLASSPATH="-cp ./lib/gui-0.1-SNAPSHOT-jar-with-dependencies.jar:./lib/psm-services.jar:./lib/dymola_interface-2016.jar:./lib/modelica_java.jar:./lib/helmflow_core-2.2.4.201606211030.0.jar:${PSM_DATA}/test/cfg"
PSM_MAIN=org.power_systems_modelica.psm.gui.MainApp
echo "Java options    : ${PSM_OPTIONS}"
echo "Java classpath  : ${PSM_CLASSPATH}"
echo "Java main class : ${PSM_MAIN}"
echo ""

java ${PSM_CLASSPATH} ${PSM_OPTIONS} ${PSM_MAIN} >& psm.log
